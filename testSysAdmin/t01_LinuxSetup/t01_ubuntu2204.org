#+title: t01_ubuntu2204
*** ubuntu 22.04 setup notes

**** TODO [#A] definately have more things to add

**** ubuntu setup script
#+begin_src shell
sudo apt update && sudo apt upgrade
reboot
### app tools
sudo apt install -y terminator
sudo apt install -y vim-gtk3     # for +clipboard and +python3
sudo apt install -y tmux
sudo apt install -y zsh
sudo apt install -y git
sudo apt install -y ranger
sudo apt install -y cmatrix
sudo apt install -y tldr
sudo apt install -y pandoc
sudo apt install -y trash-cli

### system tools
sudo apt install -y i3
sudo apt install -y net-tools # ifconfig
sudo apt install -y htop

sudo apt install -y g++
sudo apt install -y valgrind
sudo apt install -y ctags

# ??
# sudo apt-get install -y python-opencv

# git setup
git config --global user.name wenchen
git config --global user.email richardlee0211er@gmail.com

## config file
mkdir $HOME/Code
git clone https://github.com/richardlee0211/test $HOME/Code/_Mytest
# cp ~/Code/test/testSysAdmin/... ~/.Xmodmap  && xmodmap ~/.Xmodmap    # use caps as ctrl
# cp ~/Code/test/testSysAdmin/... ~/.tmux.conf
# cp ~/Code/test/testSysAdmin/... ~/.vimrc

cp $HOME/Code/_Mytest/testSysAdmin/t01_LinuxSetup/vim/vimrc.basic.conf $HOME/.vimrc
cp $HOME/Code/_Mytest/testSysAdmin/t01_LinuxSetup/c01_tmux.conf  $HOME/.tmux.conf

#+end_src

this seem to be a good ubuntu set up script
[here](https://github.com/sojharo/mangi-script/blob/master/my_ubuntu_setup.sh)

using mac keyboard but windows way to copy and paste is painful

maybe I just need a simple laptop setup to focus on coding problem

[this](https://dev.to/brpaz/my-linux-development-environment-of-2018-ch7)
contains a lot ubuntu tools

so restart the VM, and in the login options, I can i3 as my VM(window manage)

this is exciting, and this is a choice. i3, tmux, transparent terminal and backgroud picture

and I will need a remap to vim keystrick


**** map cap locks to ctrl as I am so used to it
- change the keyboard layout
setxkbmap -layout us

- xmodmap utility
utility for modifying keymaps and pointer button mappings in X
mainly from: https://wiki.archlinux.org/title/xmodmap
some conceptions:
keycode: the code that keyboard sent to motherboard
keysym:  the symbols that computer see when receive keycode
keymap table: the map between keycode and keysym

warming: Due to a limitation of Xorg, xmodmap settings are not applied to
hotplugged devices automatically.

- xmodmap -pke
...
keycode 57 = n N
...

 1. Key
 2. Shift+Key
 3. Mode_switch+Key
 4. Mode_switch+Shift+Key
 5. ISO_Level3_Shift+Key
 6. ISO_Level3_Shift+Shift+Key

- map caplock to ctrl
#+begin_src ~/.Xmodmap
    ! Simplest example of changeing CapsLock into Control
    ! from: https://wiki.archlinux.org/title/xmodmap
    ! need to clear modifier key involved
    clear lock
    clear control
    ! assign new keysym to keycode
    keycode 66 = Control_L
    ! add back the modifier key
    add control = Control_L Control_R
#+end_src

then xmodmap ~/.Xmodmap

following example modifies CapsLock to Control, and Shift+CapsLock to CapsLock
I perfer this solution
#+begin_src ~/.Xmodmap
	clear lock
	clear control
	add control = Caps_Lock Control_L Control_R
	keycode 66 = Control_L Caps_Lock NoSymbol NoSymbol
#+end_src

- see the changed modifier key
xmodmap -pm
#+begin_src  shell
	┌──(kali㉿kali)-[~]
	└─$ xmodmap -pm                                                                                                 1 ⚙
	xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):

	shift       Shift_L (0x32),  Shift_R (0x3e)
	lock
	control     Control_L (0x25),  Control_L (0x42),  Control_R (0x69)
	mod1        Alt_L (0x40),  Alt_R (0x6c),  Meta_L (0xcd)
	mod2        Num_Lock (0x4d)
	mod3
	mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
	mod5        ISO_Level3_Shift (0x5c),  Mode_switch (0xcb)
#+end_src

- to see the keycode and keysym
#+begin_src shell
    xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
    showkey --keycodes # in console
#+end_src

- Turn CapsLock into Control, and LeftControl into Hyper
This is new idea for me.
Laptop users may prefer having CapsLock as Control.
The Left Control key can be used as a Hyper modifier
(an additional modifier for emacs or openbox or i3).

#+begin_src  ~/.Xmodmap
	clear      lock
	clear   control
	clear      mod1
	clear      mod2
	clear      mod3
	clear      mod4
	clear      mod5
	keycode      37 = Hyper_L
	keycode      66 = Control_L
	add     control = Control_L Control_R
	add        mod1 = Alt_L Alt_R Meta_L
	add        mod2 = Num_Lock
	add        mod3 = Hyper_L
	add        mod4 = Super_L Super_R
	add        mod5 = Mode_switch ISO_Level3_Shift
#+end_src

- using super+tab to switch window focus
- disable super+l to lock the screen

***** with gnome tweak tool
sudo add-apt-repository universe
sudo apt install gnome-tweaks -y

in GUI:  gnome-tweak-tool > Keyboard & Mouse > Keyboard > Additional Layout Options > Caps Lock behavior

**** zsh and oh-my-zsh
a tutorial: https://computingforgeeks.com/installingconfiguring-and-customizing-zsh-on-linux/
#+begin_src shell
    apt install zsh
    ## config
    usermod username -s /usr/bin/zsh
    # or
    chsh -s /usr/bin/zsh username

    # install Oh My Zsh
    sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
#+end_src

<<<<<<< HEAD:testSysAdmin/testLinuxSetup/README.UbuntuSetup.md
about zsh theme:
need to be
- relative/tail path, hostname
- no two lines
- no head and tail decoration
good examples: geoffgarside

```~/.zshrc
=======
#+begin_src  ~/.zshrc
>>>>>>> 6e972b65ac02e186cb424c53c305bc29a0b1d863:testSysAdmin/t01_LinuxSetup/t01_ubuntu2204.org
    ## wenchen
    ## inside ~/.bash_profile
    ## xmodmap ~/.Xmodmap
    ## ~/.bash_profile is for login shells(GUI login or ssh)
    ## while ~/.bashrc is for interactive non-login shells
    bindkey -v
    bindkey "^A" vi-beginning-of-line
    bindkey "^E" vi-end-of-line

    ## from: https://unix.stackexchange.com/questions/97843/how-can-i-search-history-with-text-already-entered-at-the-prompt-in-zsh/280845
    autoload -U up-line-or-beginning-search
    autoload -U down-line-or-beginning-search
    zle -N up-line-or-beginning-search
    zle -N down-line-or-beginning-search
    bindkey "^[[A" up-line-or-beginning-search # Up
    bindkey "^[[B" down-line-or-beginning-search # Down

    ## take one directory path to add to $PATH
    pathadd() {
        if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
            PATH="${PATH:+"$PATH:"}$1"
        fi
    }
#+end_src

**** ranger
apt install ranger
~/.config/ranger/rc.conf
#+begin_src config
    set preview_images true
    set preview_images_method urxvt
    set draw_borders true
    set ranger_load_default_rc false

#+end_src

ranger --copy-config=scope
TODO: couldn't get image preview, could be since Kali distro

**** ssh server
#+begin_src shell
    sudo apt-get install openssh-server
    sudo systemctl enable ssh
    sudo systemctl status ssh
#+end_src

**** Chinese input method
from: http://yingshaoxo.blogspot.com/2017/12/install-chinese-input-method-on-kali.html
not work for i3
#+begin_src shell
    # 0. Set ibus
    `sudo apt install ibus`
    `sudo im-config`

    ## 1. Install RIME
    `sudo apt-get install ibus-rime`
    https://github.com/rime/home/wiki/RimeWithIBus#ubuntu

    ## 2. Select Input Language
    `reboot`
    System Setting — Region&Language — input Source, then click ‘+’ button, choose Chinese

    ## 3. Ready to use
    Press Super + space to switch input method.
    Press F4 to switch schema(simple or complex).
#+end_src

from: https://ultra-technology.org/linux_for_beginners/how-to-write-in-japanese-or-chinese-under-linux-on-any-window-manager-using-fcitx/
from: https://askubuntu.com/questions/1060130/using-ibus-japanese-input-with-ubuntu-mate-and-i3
using fcitx, take some patient to make it running
#+begin_src shell
    sudo apt install fcitx fcitx-googlepinyin fcitx-mozc im-config
    sudo apt install xfonts-intl-chinese

    echo " \
    export XMODIFIERS=@im=fcitx \
    export GTK_IM_MODULE=fcitx \
    export QT_IM_MODULE=fcitx \
    export XIM=fcitx \
    fcitx " >> ~/.xinitrc

    im-config -c # using im-config to select fcitx

    fcitx
    fcitx-configtool # using fcitx-config-gtk3 to add language/shortcuts
#+end_src

**** Chinese input method 2
now I understand how encoding and font work.
Hey, since I can read Chinese and there are some pretty cool Chinese Community,
I would need to be type Chinese in Kali, although I don't consider bring Chinese
into my Terminal yet, as a result of not finding a pretty fonts for terminal.
I think type Chinese in the search bar is good enough for now.
Plus if I really need to type Chinese in Terminal,
Gnomal-Terminal has good internal font support for Chinese.
#+begin_src  shell
    sudo apt install ibus-pinyin
    sudo apt install ibus-sunpinyin
    ibus-setup # config to using <C-space> to change imput method
    ibus restart
    reboot
#+end_src

**** firefox plugin
vimium, vim like operation
adblock, adblock
windowed, could float youtube video
dark reader, for late night read

**** screenshot
apt install scrot # and bind it to PrtSc
apt install gnome-screenshot

**** nvidia driver

#+begin_src shell
➜  testSysAdmin git:(master) ✗ sudo nvidia-detector
nvidia-driver-495
➜  testSysAdmin git:(master) ✗ ubuntu-drivers devices
    WARNING:root:_pkg_get_support nvidia-driver-390: package has invalid Support Legacyheader, cannot determine support level
    == /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0 ==
    modalias : pci:v000010DEd00001DBAsv000010DEsd0000121Abc03sc00i00
    vendor   : NVIDIA Corporation
    driver   : nvidia-driver-450-server - distro non-free
    driver   : nvidia-driver-495 - distro non-free
    driver   : nvidia-driver-460 - distro non-free
    driver   : nvidia-driver-418-server - distro non-free
    driver   : nvidia-driver-390 - distro non-free
    driver   : nvidia-driver-470-server - distro non-free
    driver   : nvidia-driver-460-server - distro non-free
    driver   : nvidia-driver-470 - distro non-free recommended
    driver   : xserver-xorg-video-nouveau - distro free builtin
➜  testSysAdmin git:(master) ✗ sudo apt install -y nvidia-driver-495
#+end_src


***** uninstall nvidia drivers
from: https://askubuntu.com/questions/206283/how-can-i-uninstall-a-nvidia-driver-completely
#+begin_src shell
    dpkg -l  | grep -i nvidia
    sudo apt-get remove --purge '^nvidia-.*'
    sudo apt autoremove
    sudo pat-get install ubuntu-desktop
    echo 'nouveau' | sudo tee -a /etc/modules
    sudo rm /etc/X11/xorg.conf
#+end_src

this works, from: https://askubuntu.com/questions/1124057/ubuntu-18-04-stuck-at-purple-loading-screen-after-new-update
#+begin_src shell
	sudo apt-get update
	sudo apt-get install --reinstall lightdm
	sudo dpkg-reconfigure lightdm
#+end_src

**** cuda
sudo apt install nvidia-cuda-toolkit
nvcc --version


**** install mate
#+begin_src shell
    sudo apt install -y tasksel
    sudo tasksel install ubuntu-mate-desktop
    ## choose lightdm as display manager
#+end_src

**** use terminator
as it support "copy on select"
would be faster when with terminal and broswer work flow
apt install terminator

**** unattended-upgr take too long
from: https://askubuntu.com/questions/934807/unattended-upgrades-status
check
#+begin_src shell
	systemctl list-timers apt-daily.timer
	ls -l /var/lib/apt/periodic/
	less /var/log/unattended-upgrades/unattended-upgrades.log
	apt list --upgradeable | wc -l
#+end_src
for this time, it would take 10 hours to download all the packages it needs
abort this job

from: https://unix.stackexchange.com/questions/374748/ubuntu-update-error-waiting-for-unattended-upgr-to-exit
#+begin_quote
    1. Stop the automatic updater.
    `sudo dpkg-reconfigure -plow unattended-upgrades`
    At the first prompt, choose not to download and install updates.
    Make a reboot.

    2. Make sure any packages in an unclean state are installed correctly.
    `sudo dpkg --configure -a`

    3. Get your system up-top-date.
    `sudo apt update && sudo apt -f install && sudo apt full-upgrade`

    4. Turn the automatic updater back on, now that the blockage is cleared.
    `sudo dpkg-reconfigure -plow unattended-upgrades`
    Select the package unattended-upgrades again.
#+end_quote

log:
system crashed, try to save it,
guess what, donot move the case when the computer is working


**** fix audio problem

kali don't play audio when playing youtube
apt install alsa-utils -y # to use alsamixer
And it could tell PS4 controller and pass audio to this device, nice

**** fix firefox veritical tear
disable hardware acceleration
For Firefox do this:
    Type "about:config" on the address bar.
    Search for layers.acceleration.force-enabled (default is false). This forces Hardware Acceleration to turn on.
    Change it to true by double-clicking.
    Save and restart Firefox.

**** firefox tab appearance

I can hard see the tabs, change its appearence
from: https://superuser.com/questions/1653533/how-to-switch-back-to-firefox-old-style-of-tabs
n Firefox 91, restore the old tab style as follows:

#+begin_quote
    Open about:config.

    Search for toolkit.legacyUserProfileCustomizations.stylesheets.

    Double-click the value to set it to true.

    Open about:support.

    Search for Profile Directory (or Profile Folder).

    Click Open Directory (or Open Folder).

    Create a directory named chrome.

    Navigate into the chrome directory.

    Create a new file inside chrome named userChrome.css.

    Copy and paste the following code into userChrome.css:

     .tab-background {
       border-radius: 0px 0px !important;
       margin-bottom: 0px !important;
     }

     .tabbrowser-tab:not([selected=true]):not([multiselected=true]) .tab-background {
       background-color: color-mix(in srgb, currentColor 5%, transparent);
     }

     menupopup>menu,
     menupopup>menuitem {
       padding-block: 2px !important;
     }

     :root {
       --arrowpanel-menuitem-padding: 2px !important;
     }

    Save the file.

    Restart Firefox.

	The old tab style is restored.
#+end_quote

**** vim copy and paste x11
apt install vim-gtk3
vim --version # look for xterm_clipboard
set clipboard+=unnamedplus

**** build vim with X11 copy and paste support
from vim.git/src/INTSALL
```shell
#+begin_quote
To build Vim on Ubuntu from scratch on a clean system using git:
	Install tools required to be able to get and build Vim:
	% sudo apt install git
	% sudo apt install make
	% sudo apt install clang

	Build Vim with default features:
	% git clone https://github.com/vim/vim.git
	% cd vim/src
	% make

	Run tests to check there are no problems:
	% make test

	Install Vim in /usr/local:
	% sudo make install

	Add X windows clipboard support (also needed for GUI):
	% sudo apt install libxt-dev
	% make reconfig

	Add GUI support:
	% sudo apt install libgtk-3-dev
	% make reconfig

	Add Python 3 support:
	% sudo apt install libpython3-dev
	Uncomment this line in Makefile:
		"CONF_OPT_PYTHON3 = --enable-python3interp"
	% make reconfig
#+end_quote

apt vim is in /user/bin while this build should be in /user/local/bin/vim
only ubuntu using Ctrl+Shift+c or +v to copy and paste


**** pip3 and internet speed test
sudo apt install -y python3-pip
pip3 install speedtest-cli
export PATH="/home/wenchen/.local/bin/:$PATH" # ~/.zshrc

Gigbit internet in the lab
#+begin_src shell
    pip3 install speedtest-cli
    ➜  testLinuxSetup git:(master) ✗ ~/.local/bin/speedtest
    Retrieving speedtest.net configuration...
    Testing from SUNY at Stony Brook (XXXXXXXXXXXXX)...
    Retrieving speedtest.net server list...
    Selecting best server based on ping...
    Hosted by Optimum Online (New York, NY) [76.79 km]: 7.726 ms
    Testing download speed................................................................................
    Download: 774.94 Mbit/s
    Testing upload speed......................................................................................................
    Upload: 677.55 Mbit/s
#+end_src

**** youtube-dl
sudo wget https://yt-dl.org/latest/youtube-dl -O /usr/local/bin/youtube-dl
sudo chmod a+x /usr/local/bin/youtube-dl
sudo apt install python-dev
rehash

**** dolphin
using dolphin as it provides better img preview
sudo apt install dolphin
feels like this apt build is limited

- setting default filemanager to dolphin
failed after some twinking
maybe reboot??
https://help.ubuntu.com/community/DefaultFileManager

#### stress test
nice, the new heat sink works, stress cpu top temp 65 degrees,
stress gpu top temp 71 degrees
#+begin_src shell
    sudo apt-get install -y stress htop iotop lm-sensors
    # Run a stress test with `nproc` CPU workers (sqrt)
    #                        `nproc` Virtual Memory workers (malloc / free)
    #                        `nproc` workers calling (sync)
    #                        `nproc` workers writing to disk (write / unlink)
    # For a total of 60 seconds.
    stress --cpu `nproc` --vm `nproc` --vm-bytes 1GB --io `nproc` --hdd `nproc` --hdd-bytes 1GB --timeout 60s

    git clone https://github.com/wilicc/gpu-burn
    cd gpu-burn
    make
    ./gpu_burn 60 # will run gpu_burn for 60 seconds

    sudo apt install glmark2
    glmark2

    sudo apt install s-tui
    s-tui

    htop
    sudo iotop
    watch sudo sensors
    watch nvidia-smi
#+end_src

**** install notejs
sudo snap install node --classic
alias open=open-cli # in ~/.zshrc

sudo npm install --global open-cli
sudo npm install --global public-ip-cli    # public-ip
sudo npm install --global internal-ip-cli  # internal-ip

**** how2
how2 seems to be nice, terminal app to search stack overflow
https://github.com/santinic/how2

**** exiftool
mp4, mkv, webm, mov

#+begin_src shell
    exiftool --common -json <filename.mp4>

    ## Renaming Image Files According to their Creation Date
    exiftool '-filename<CreateDate' -d %y%m%d-%H%M%S%%-03.c.%%e -r ./imagepath
    ## This would rename a file taken on Feb 1, 2021, at 14:08 to 20210201-1408-000.xxx.


    exiftool --common -json -r <dir>  >> output.txt   # give me a list of files metadata, cool

    exiftool --common -json -r ./  > output.txt

    time exiftool -progress -ext mp4 -ext mkv -ext webm -ext mov --common -json -r ./ > output.txt
    ## use this one
    time exiftool -progress -ext mp4 -ext mkv -ext webm -ext mov  -ext rmvb -ext avi -ext flv -ext m4v -json -r ./ > output.txt     # remove --common as I need filesize for mkv file

    # ======== ./_edu/SBU_CS519DS/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.mp4 [3788/3788]
    #   895 directories scanned
    #  3788 image files read
    # exiftool -progress -ext mp4 -ext mkv -ext webm -ext mov -ext rmvb -ext avi     38.25s user 8.30s system 17% cpu 4:25.29 total
    ## 4 min to scan 3788 files, not bad


    ## does it worth the cpu time to convert all video file to one format ??

    exiftool -progress -ext mp4 -ext mkv -ext webm -ext mov --common -json -r ./ > output.txt

    exiftool -T -createdate -aperture -shutterspeed -iso dir > out.txt
    ## List specified meta information in tab-delimited column form for all images in "dir" to an output text file named "out.txt".


    ## we don't need -l here
    exiftool --common -json -l -r ./  > output.txt
    # [{
    #   "SourceFile": "./apple/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.mp4",
    #   "ExifToolVersion": {
    #     "desc": "ExifTool Version Number",
    #     "val": 12.30
    #   },
    #   "Directory": {
    #     "desc": "Directory",
    #     "val": "./apple"
    #   },
    #   "FileModifyDate": {
    #     "desc": "File Modification Date/Time",
    #     "val": "2021:09:14 15:17:14-04:00"
    #   },
    #   "FileAccessDate": {
    #     "desc": "File Access Date/Time",
    #     "val": "2021:09:14 15:17:14-04:00"
    #   },
    #   # ...
    # ]


    (base) ➜  ads exiftool -common -csv -r ./ > out.csv
        2 directories scanned
       10 image files read
    (base) ➜  ads more out.csv       # don't have Durations, I also need creation date
    SourceFile,FileName,FileSize,ImageSize
    ./apple/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.mp4,XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.mp4,30 MiB,1920x1080

    ## without -common
    ## SourceFile,AudioBitsPerSample,AudioChannels,AudioFormat,AudioSampleRate,AverageBitrate,AvgBitrate,Balance,BitDepth,BufferSize,ByteOrderMark,CodecID,ColorRepresentation,CompatibleBrands,CompressorID,CreateDate,CurrentTime,Directory,DocType,DocTypeReadVersion,DocTypeVersion,Duration,EBMLReadVersion,EBMLVersion,Encoder,Error,ExifToolVersion,FileAccessDate,FileInodeChangeDate,FileModifyDate,FileName,FilePermissions,FileSize,FileType,FileTypeExtension,GraphicsMode,HandlerDescription,HandlerType,HandlerVendorID,ImageHeight,ImageSize,ImageWidth,LineCount,MajorBrand,MatrixStructure,MaxBitrate,MediaCreateDate,MediaDataOffset,MediaDataSize,MediaDuration,MediaHeaderVersion,MediaLanguageCode,MediaModifyDate,MediaTimeScale,Megapixels,MIMEEncoding,MIMEType,MinorVersion,ModifyDate,MovieHeaderVersion,MuxingApp,Newlines,NextTrackID,OpColor,PixelAspectRatio,PosterTime,PreferredRate,PreferredVolume,PreviewDuration,PreviewTime,Rotation,SelectionDuration,SelectionTime,SourceImageHeight,SourceImageWidth,TagName,TagString,TimecodeScale,TimeScale,TrackCreateDate,TrackDuration,TrackHeaderVersion,TrackID,TrackLanguage,TrackLayer,TrackModifyDate,TrackNumber,TrackType,TrackVolume,VideoFrameRate,VideoScanType,WordCount,WritingApp,XResolution,YResolution
#+end_src

**** teamviewer
wget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
sudo apt install ./name.deb ## or
sudo dpkg -i ./name.deb

which teamviewer
teamviewer -help
teamviewer -info
-> % sudo teamviewer -info
 TeamViewer                           15.29.4  (DEB)
 TeamViewer ID:                        XXXXXXXXX
-> % sudo teamviewer passwd <abcd1234>



**** config window manager to fit my habits
tile window to left, right, top-right, botton-right, full screen
    ALT+SHIFT+hjkl
move window to second screen
    ALT+SHIFT+1234

**** zothers
this seem to be a good ubuntu set up script
from: [[https://github.com/sojharo/mangi-script/blob/master/my_ubuntu_setup.sh]]

using mac keyboard but windows way to copy and paste is painful

maybe I just need a simple laptop setup to focus on coding problem

from: [[https://dev.to/brpaz/my-linux-development-environment-of-2018-ch7]]
contains a lot ubuntu tools

so restart the VM, and in the login options, I can i3 as my VM(window manage)

this is exciting, and this is a choice. i3, tmux, transparent terminal and backgroud picture

and I will need a remap to vim keystrick



*** log 20220124 lab machine
okay I need to set up a clean Ubuntu 18.04 for Unity3D

change color palettes in terminal app, as many terminal app use this config

**** different desktop environment survey
from: https://ubuntu.com/download/flavours
from: https://linuxconfig.org/the-8-best-ubuntu-desktop-environments-20-04-focal-fossa-linux

**** Ubuntu Mate
from: https://wiki.mate-desktop.org/mate-desktop/
has redshift, cool
from: https://wiki.mate-desktop.org/mate-desktop/applications/atril/

Gnome 3
from: https://www.gnome.org/

KDE
from: https://kde.org/plasma-desktop/

from: https://ubuntustudio.org/
from: https://xubuntu.org/

**** log 20220526 lab machine
--------------------------------------------------------------------------------
set up Ubuntu 22.04 for Docker GPU experience

tried Code ready Container(CRC) from redhat and charted-kubeflow, microk8s, and juju
killed Ubuntu desktop display, need reinstall system again, shoot

Code
Download folder
broswer book marks


**** power consumption cli

of course a file
sudo cat /sys/class/powercap/*/energy_uj   ## on a laptop version Ubuntu
sudo cat /sys/class/power_supply/BAT0/power_now

from: https://askubuntu.com/questions/421955/software-to-find-desktop-power-usage
Powertop, Powerstat, and Power Statistics programs only works for laptops

it turns out, this is inconvenient by software
from: https://web.archive.org/web/20210506133809/
from: https://software.intel.com/content/www/us/en/develop/blogs/measuring-application-power-consumption-on-linux-operating-system.html

*** temp rice Linux

well, I gonna try it anyway.

search download and install *VirtualBox*
search download and install *Arch Linux*

links:
[[https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg][time line]]
[[https://wiki.installgentoo.com/index.php/GNU/Linux_ricing][GNU/Linux ricing]]
[[https://github.com/Airblader/i3][i3-gaps]]
[[https://wiki.archlinux.org/index.php/Frequently_asked_questions][arch wiki]]

form:[[https://wiki.archlinux.org/index.php/General_recommendations][general recommendations]]
followed this wiki to build my ArchLinux and fall, the login interface display gabage
the default pdf view in Ubuntu is "evince", which support hjkl vim move key-map

**** Top 10 Linux Job Interview Questions

<2019-09-23>

From youtube tutorialLinux
Q1: Kernel Version Checking
uname -a

Q2: IP address checking
Ifconfig
Ip adds show eth0

Q3: Free disk space checking
df -ah
Disk free

Q4: Manage services on a system
new: systemd
Systemctl status udev

old:
Service dev status

Q5: check fold’s size
du -sh ~/Code
Disk usage

Q6: check for open ports
netstat -tulpn

Q7: CPU usage of a process
Ps aux | grep nginx
Top

Q8: Dealing with Mounts
Ls /mnt
Mount /dev/sda2 /mnt
More /etc/fsfile

Q9: help list
Man <command>
<Command> —help
Google.com

**** Some notes on youtube DistroTube First Rice

For any terminal using Xresource
Xrdb -merge ~/.Xresource

- Alsamixer
- GIMP, the photo editing software
- Powerline
- Cmus, a terminal music player
- Unicode character with fontawesome, or other font
- Just search unicode music
 - vi mode in bash and zsh
- mpd ncmpcpp mpc
- Pandoc

**** logout using commnand line
Logout with ‘pkill x’, OMG
Pkill - u ${USERNAME}
Or
Gnome-session-quit

Use stow to place dot in  ~/.config

**** Linux from scratch

here: http://www.linuxfromscratch.org/
what could help more to build a Linux from scratch

Here: http://www.linuxfromscratch.org/blfs/view/svn/index.html
A good list of Linux package and utility


**** do resolution 2560x1440 on SyncMaster SA850 :tDevLog:

!! not a driver problem, this the DP to DVI adaptor or the DVI cable can not do more than 1080P

```shell
	## could config X server in ~/.xprofile

	## example
	# sudo xrandr --newmode "1600x900_60.00"  118.25  1600 1696 1856 2112  900 903 908 934 -hsync +vsync
	# sudo xrandr --addmode eDP-1 "1600x900_60.00"
	# sudo xrandr --newmode "2560x1440_60.00"  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync

	## failed
	# xrandr to get display name, DP-1
	# ╰─○ cvt 2560 1440
	# 2560x1440 59.96 Hz (CVT 3.69M9) hsync: 89.52 kHz; pclk: 312.25 MHz
	# Modeline "2560x1440_60.00"  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync

	## failed 02
	# gtf 2560 1440 60
	# 2560x1440 @ 60.00 Hz (GTF) hsync: 89.40 kHz; pclk: 311.83 MHz
	# Modeline "2560x1440_60.00"  311.83  2560 2744 3024 3488  1440 1441 1444 1490  -HSync +Vsync
	# sudo xrandr --newmode "test02"  311.83  2560 2744 3024 3488  1440 1441 1444 1490  -HSync +Vsync
	# sudo xrandr --addmode DP-1 "test02"

	## failed 03
	# gtf 2560 1440 30
	# 2560x1440 @ 30.00 Hz (GTF) hsync: 43.95 kHz; pclk: 146.27 MHz
	# Modeline "2560x1440_30.00"  146.27  2560 2680 2944 3328  1440 1441 1444 1465  -HSync +Vsync
	# sudo xrandr --newmode "test03" 146.27  2560 2680 2944 3328  1440 1441 1444 1465  -HSync +Vsync
	# sudo xrandr --addmode DP-1 "test03"
	# sudo xrandr --output DP-1 --mode "test03"

	# lspci -nn # to view the devices
	# check /var/log/Xorg.0.log
```

**** setting up printer in Ubuntu, no lucky here :tDevLog:

Dell 2155cdn Ubuntu driver install

driver from dell doesn't work with ubuntu
from: https://www.dell.com/support/home/en-us/product-support/product/dell-2155cn-cdn/drivers
from: https://www.dell.com/support/kbdoc/en-us/000129694/how-to-install-and-configure-a-dell-printer-using-the-ubuntu-operating-system
rpm2cpio your filename.rpm | cpio --extract --make-directories
sudo chown -R root:root usr
sudo cp -r usr /
sudo service cups restart
ipstat
https://ip:631/Printers



from: https://ubuntuforums.org/showthread.php?t=2053460
Openprinting recommends the Generic PCL 5c Printer - CUPS+Gutenprint v5.2.5 driver for the related 2145cn. You might have some luck there.

**** t home brew on ubuntu
- apt
- snap
- homebrew
- pip
- npm

**** t golang for hugo websites
wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.23.0.linux-amd64.tar.gz
