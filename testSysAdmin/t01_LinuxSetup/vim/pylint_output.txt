[7;33m************* Module src.main05[0m
src/main05.py:260:0: C0301: [1mLine too long (157/150)[0m ([1mline-too-long[0m)
src/main05.py:275:9: W0511: [35m# patchup: un-normalized the predictions and visualize the prediction[0m ([35mfixme[0m)
src/main05.py:1:0: C0114: [1mMissing module docstring[0m ([1mmissing-module-docstring[0m)
src/main05.py:20:0: E0401: [1;31mUnable to import 'options'[0m ([1;31mimport-error[0m)
src/main05.py:21:0: E0401: [1;31mUnable to import 'running02'[0m ([1;31mimport-error[0m)
src/main05.py:22:0: E0401: [1;31mUnable to import 'running02'[0m ([1;31mimport-error[0m)
src/main05.py:23:0: E0401: [1;31mUnable to import 'utils'[0m ([1;31mimport-error[0m)
src/main05.py:24:0: E0401: [1;31mUnable to import 'datasets.data'[0m ([1;31mimport-error[0m)
src/main05.py:25:0: E0401: [1;31mUnable to import 'datasets.datasplit'[0m ([1;31mimport-error[0m)
src/main05.py:26:0: E0401: [1;31mUnable to import 'models.ts_transformer'[0m ([1;31mimport-error[0m)
src/main05.py:27:0: E0401: [1;31mUnable to import 'models.loss'[0m ([1;31mimport-error[0m)
src/main05.py:28:0: E0401: [1;31mUnable to import 'optimizers'[0m ([1;31mimport-error[0m)
src/main05.py:31:0: C0116: [1mMissing function or method docstring[0m ([1mmissing-function-docstring[0m)
src/main05.py:31:0: R0914: [1;3;35mToo many local variables (90/80)[0m ([1;3;35mtoo-many-locals[0m)
src/main05.py:31:9: W0621: [35mRedefining name 'config' from outer scope (line 405)[0m ([35mredefined-outer-name[0m)
src/main05.py:37:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:37:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:43:4: C0415: [1mImport outside toplevel (GPUtil)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:43:4: E0401: [1;31mUnable to import 'GPUtil'[0m ([1;31mimport-error[0m)
src/main05.py:47:30: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:50:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:50:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:52:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:52:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:86:28: R1718: [1;3;35mConsider using a set comprehension[0m ([1;3;35mconsider-using-set-comprehension[0m)
src/main05.py:86:59: R1732: [1;3;35mConsider using 'with' for resource-allocating operations[0m ([1;3;35mconsider-using-with[0m)
src/main05.py:86:59: W1514: [35mUsing open without explicitly specifying an encoding[0m ([35munspecified-encoding[0m)
src/main05.py:91:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:91:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:113:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:113:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:114:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:114:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:115:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:115:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:117:9: W1514: [35mUsing open without explicitly specifying an encoding[0m ([35munspecified-encoding[0m)
src/main05.py:146:11: C1802: [1mDo not use `len(SEQUENCE)` without comparison to determine if a sequence is empty[0m ([1muse-implicit-booleaness-not-len[0m)
src/main05.py:157:4: E0401: [1;31mUnable to import 'models.ts_transformer'[0m ([1;31mimport-error[0m)
src/main05.py:157:4: C0415: [1mImport outside toplevel (models.ts_transformer.TSTransformerEncoder)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:158:11: C0123: [1mUse isinstance() rather than type() for a typecheck.[0m ([1munidiomatic-typecheck[0m)
src/main05.py:165:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:165:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:166:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:166:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:167:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:167:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:191:11: C0123: [1mUse isinstance() rather than type() for a typecheck.[0m ([1munidiomatic-typecheck[0m)
src/main05.py:196:7: W0125: [35mUsing a conditional statement with a constant value[0m ([35musing-constant-test[0m)
src/main05.py:210:8: C0415: [1mImport outside toplevel (numpy)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:224:25: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:229:7: C0121: [1mComparison 'config['test_only'] == True' should be 'config['test_only'] is True' if checking for the singleton value True, or 'config['test_only']' if testing for truthiness[0m ([1msingleton-comparison[0m)
src/main05.py:239:15: C0123: [1mUse isinstance() rather than type() for a typecheck.[0m ([1munidiomatic-typecheck[0m)
src/main05.py:243:8: C0415: [1mImport outside toplevel (numpy)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:254:11: W0125: [35mUsing a conditional statement with a constant value[0m ([35musing-constant-test[0m)
src/main05.py:262:12: C0415: [1mImport outside toplevel (pathlib.Path)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:268:29: R1732: [1;3;35mConsider using 'with' for resource-allocating operations[0m ([1;3;35mconsider-using-with[0m)
src/main05.py:271:29: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:276:11: W0125: [35mUsing a conditional statement with a constant value[0m ([35musing-constant-test[0m)
src/main05.py:280:12: C0415: [1mImport outside toplevel (pandas)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:293:12: C0415: [1mImport outside toplevel (matplotlib.pyplot)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:304:12: C0415: [1mImport outside toplevel (pathlib.Path)[0m ([1mimport-outside-toplevel[0m)
src/main05.py:354:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:356:42: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:357:25: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:359:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:359:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:360:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:360:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:361:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:361:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:362:20: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:362:20: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:370:58: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:374:62: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:378:12: E1205: [1;31mToo many arguments for logging format string[0m ([1;31mlogging-too-many-args[0m)
src/main05.py:395:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:395:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:398:16: W1202: [35mUse lazy % formatting in logging functions[0m ([35mlogging-format-interpolation[0m)
src/main05.py:398:16: C0209: [1mFormatting a regular string which could be a f-string[0m ([1mconsider-using-f-string[0m)
src/main05.py:31:0: R0912: [1;3;35mToo many branches (42/12)[0m ([1;3;35mtoo-many-branches[0m)
src/main05.py:31:0: R0915: [1;3;35mToo many statements (224/120)[0m ([1;3;35mtoo-many-statements[0m)
src/main05.py:31:0: R1710: [1;3;35mEither all return statements in a function should return an expression, or none of them should.[0m ([1;3;35minconsistent-return-statements[0m)
src/main05.py:294:12: W0612: [35mUnused variable 'fig'[0m ([35munused-variable[0m)
src/main05.py:390:4: W0612: [35mUnused variable 'book'[0m ([35munused-variable[0m)

------------------------------------------------------------------
Your code has been rated at 4.84/10 (previous run: 4.61/10, +0.23)

