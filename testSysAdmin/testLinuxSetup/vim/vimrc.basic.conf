"Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ================ General Config ====================

    set textwidth=0                 "make paste into vim easier
    set number                      "Line numbers are good
    set relativenumber
    set backspace=indent,eol,start  "Allow backspace in insert mode
    set history=1000                "Store lots of :cmdline history
    set showcmd                     "Show incomplete cmds down the bottom
    set showmode                    "Show current mode down the bottom
    set gcr=a:blinkon0              "Disable cursor blink
    set visualbell                  "No sounds
    set autoread                    "Reload files changed outside vim
    set hlsearch                    "high light search result
    set cc=80                       "get a red line reminder at column count 80
    set clipboard="*"               "the origina
    "set clipboard+=unnamed         "make vim register plus sys register,
    set cursorline                  "get a line under where cursor point
    set gcr=a:block-blinkon0        "禁止光标闪烁
    "set lines=35 columns=80 "maybe a better choice
    " autocmd BufWritePost $MYVIMRC source $MYVIMRC " 让配置变更立即生效
    set incsearch                   " 开启实时搜索功能
    set ignorecase                  " 搜索时大小写不敏感
    syntax on                       "turn on syntax highlighting
    set hidden                      " buffers exist in the background without being in a window.
                                    " http://items.sjbach.com/319/configuring-vim-right
    set nowrap                      "no, Wrap lines, I find nowrap is suitable for small screen
    set linebreak                   "Wrap lines at convenient points
    set guifont=Monaco:h16          " For MacVim
    "xnoremap p pgvy                " 'p' to paste, 'gv' to re-select what was originally selected. 'y' to copy it again
                                    " don't know if this is practical,


    " set list listchars=tab:\ \ ,trail:Â· " Display tabs and trailing spaces visually
    set list listchars=tab:>-
    set background=dark

" guivim config {{{
    " 禁止显示滚动条
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=R
    " 禁止显示菜单和工具条
    set guioptions-=m
    set guioptions-=T
" }}}

"Lang & Encoding {{{
    set fileencodings=utf-8,gbk2312,gbk,gb18030,cp936
    set encoding=utf-8
    set langmenu=zh_CN
    let $LANG = 'en_US.UTF-8'
"language messages zh_CN.UTF-8
" }}}

" Turn Off Swap Files {{{
    set noswapfile
    set nobackup
    set nowb
" }}}

" Persistent Undo {{{
    " Keep undo history across sessions, by storing in file.
    " Only works all the time.
    " NOT WORKING: Didnt work when yanked right out of YADR
    "silent !mkdir ~/.vim/backups > /dev/null 2>&1
    "set undodir=~/.vim/backups
    "set undofile
" }}}

" Indentation  {{{
    set autoindent
    set smartindent
    set smarttab
    set shiftwidth=4
    set softtabstop=4
    set tabstop=4
    set expandtab
    set foldmethod=indent

    filetype plugin on
    filetype indent on
" }}}

" Completion  {{{
    set wildmode=list:longest
    " vim 自身命令行模式智能补全
    set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
    set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
    set wildignore+=*vim/backups*
    set wildignore+=*sass-cache*
    set wildignore+=*DS_Store*
    set wildignore+=vendor/rails/**
    set wildignore+=vendor/cache/**
    set wildignore+=*.gem
    set wildignore+=log/**
    set wildignore+=tmp/**
    set wildignore+=*.png,*.jpg,*.gif
" }}}

" Scrolling {{{
    set scrolloff=8         "Start scrolling when we're 8 lines away from margins
    set sidescrolloff=15
    set sidescroll=1
" }}}

" Change leader to a comma because the backslash is too far away
" That means all \x commands turn into ,x
" The mapleader has to be set before vundle starts loading all
" the plugins.
let mapleader=","



" Function {{{
" Remove trailing whitespace when writing a buffer, but not for diff files.
" From: Vigil
" @see http://blog.bs2.to/post/EdwardLee/17961
    function! RemoveTrailingWhitespace()
        if &ft != "diff"
            let b:curcol = col(".")
            let b:curline = line(".")
            silent! %s/\s\+$//
            silent! %s/\(\s*\n\)\+\%$//
            call cursor(b:curline, b:curcol)
        endif
    endfunction
    autocmd BufWritePre * call RemoveTrailingWhitespace()
" }}}

" make vim accept per project .vimrc
set exrc
set secure
