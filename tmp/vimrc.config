"Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ================ General Config ====================

    set textwidth=0                 "make paste into vim easier
    set number                      "Line numbers are good
    set backspace=indent,eol,start  "Allow backspace in insert mode
    set history=1000                "Store lots of :cmdline history
    set showcmd                     "Show incomplete cmds down the bottom
    set showmode                    "Show current mode down the bottom
    set gcr=a:blinkon0              "Disable cursor blink
    set visualbell                  "No sounds
    set autoread                    "Reload files changed outside vim
    set hlsearch                    "high light search result
    set cc=80                       "get a red line reminder at column count 80
    "set clipboard="*"               "the origina
    set clipboard=unnamed         "make vim register plus sys register,
    set cursorline                  "get a line under where cursor point
    set gcr=a:block-blinkon0        "禁止光标闪烁
    "set lines=35 columns=80 "maybe a better choice
    " autocmd BufWritePost $MYVIMRC source $MYVIMRC " 让配置变更立即生效
    set incsearch                   " 开启实时搜索功能
    set ignorecase                  " 搜索时大小写不敏感
    syntax on                       "turn on syntax highlighting
    set hidden                      " buffers exist in the background without being in a window.
                                    " http://items.sjbach.com/319/configuring-vim-right
    set nowrap                      "no, Wrap lines, I find nowrap is suitable for small screen
    set linebreak                   "Wrap lines at convenient points
    set guifont=Monaco:h16          " For MacVim
    "xnoremap p pgvy                " 'p' to paste, 'gv' to re-select what was originally selected. 'y' to copy it again
                                    " don't know if this is practical,


" guivim config {{{
    " 禁止显示滚动条
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=R
    " 禁止显示菜单和工具条
    set guioptions-=m
    set guioptions-=T
" }}}

"Lang & Encoding {{{
    set fileencodings=utf-8,gbk2312,gbk,gb18030,cp936
    set encoding=utf-8
    set langmenu=zh_CN
    let $LANG = 'en_US.UTF-8'
"language messages zh_CN.UTF-8
" }}}

" Turn Off Swap Files {{{
    set noswapfile
    set nobackup
    set nowb
" }}}

" Persistent Undo {{{
    " Keep undo history across sessions, by storing in file.
    " Only works all the time.
    " NOT WORKING: Didnt work when yanked right out of YADR
    "silent !mkdir ~/.vim/backups > /dev/null 2>&1
    "set undodir=~/.vim/backups
    "set undofile
" }}}

" Indentation  {{{
    set autoindent
    set smartindent
    set smarttab
    " set shiftwidth=4
    " set softtabstop=4
    " set tabstop=4
    set shiftwidth=2
    set softtabstop=2
    set tabstop=2
    set expandtab
    set foldmethod=indent

    filetype plugin on
    filetype indent on
" }}}

" Completion  {{{
    set wildmode=list:longest
    " vim 自身命令行模式智能补全
    set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
    set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
    set wildignore+=*vim/backups*
    set wildignore+=*sass-cache*
    set wildignore+=*DS_Store*
    set wildignore+=vendor/rails/**
    set wildignore+=vendor/cache/**
    set wildignore+=*.gem
    set wildignore+=log/**
    set wildignore+=tmp/**
    set wildignore+=*.png,*.jpg,*.gif
" }}}

" Scrolling {{{
    set scrolloff=8         "Start scrolling when we're 8 lines away from margins
    set sidescrolloff=15
    set sidescroll=1
" }}}

" Change leader to a comma because the backslash is too far away
" That means all \x commands turn into ,x
" The mapleader has to be set before vundle starts loading all
" the plugins.
let mapleader=","

" resize
noremap <C-w>+ :resize +5<CR>
noremap <C-w>- :resize -5<CR>
noremap <C-w>< :vertical:resize -10<CR>
noremap <C-w>> :vertical:resize +10<CR>

" ========================================
" Vim plugin configuration
" ========================================
"
" This file contains the list of plugin installed using vundle plugin manager.
" Once you've updated the list of plugin, you can run vundle update by issuing
" the command :BundleInstall from within vim or directly invoking it from the
" command line with the following syntax:
" vim --noplugin -u vim/vundles.vim -N "+set hidden" "+syntax on" +BundleClean! +BundleInstall +qall
" Filetype off is required by vundle
filetype off

" set the runtime path to include Vundle and initialize
"set rtp+=~/.vim/bundle/vundle/
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
" alternatively, pass a path where Vundle should install plugins

" let Vundle manage Vundle (required)
"Plugin 'gmarik/vundle'
Plugin 'VundleVim/Vundle.vim'

"""" MY VUNDLES """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    "" test: wanna work with ipython to stop copy and paste manually
    Plugin 'jpalardy/vim-slime'
    Plugin 'hanschen/vim-ipython-cell' " has a problem

"""" END OF VUNDLE PLUGINS """""""""""""""""""""""""""""""""""""""""""""""""""""
call vundle#end()

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

"===================  PLUGIN CONFIG ==========================================
"
" slime configuration {{{
	" always use tmux
	let g:slime_target = 'tmux'

	" fix paste issues in ipython
	let g:slime_python_ipython = 1

	" always send text to the top-right pane in the current tmux tab without asking
	let g:slime_default_config = {
				\ 'socket_name': get(split($TMUX, ','), 0),
				\ 'target_pane': '{top-right}' }
	let g:slime_dont_ask_default = 1
" }}}

" ipython-cell configuration {{{
	" map <Leader>c to execute the current cell
	nnoremap <Leader>c :IPythonCellExecuteCell<CR>
	let g:ipython_cell_delimit_cells_by = 'tags'
	" because ipynb-py-convert use it
	let g:ipython_cell_tag =  '# %%'

" }}}

" =========================END OF PLUGIN CONFIG=================================

" Function {{{
" Remove trailing whitespace when writing a buffer, but not for diff files.
" From: Vigil
" @see http://blog.bs2.to/post/EdwardLee/17961
    function! RemoveTrailingWhitespace()
        if &ft != "diff"
            let b:curcol = col(".")
            let b:curline = line(".")
            silent! %s/\s\+$//
            silent! %s/\(\s*\n\)\+\%$//
            call cursor(b:curline, b:curcol)
        endif
    endfunction
    autocmd BufWritePre * call RemoveTrailingWhitespace()
" }}}

" make vim accept per project .vimrc
set exrc
set secure

"" wenchen: try it for tab tables
" set noexpandtab
set expandtab
set list listchars=tab:>-   " ,trail:Â· " Display tabs and trailing spaces visually
